/* Reset */

body, p, ul, li, h1, blockquote {
    padding: 0px;
    margin: 0px;
} 

body {
    font-family: 'Vollkorn', Georgia, serif;
}

ul {
    list-style: none; /* tirando a bolinha que  veem do lado da lista */
}

a {
    text-decoration: none; /* tirando sublinhado dos links */
}

img {
    display: block;
    max-width: 100%;
    border-radius: 6px;
    width: 100%; /* imagem se expandindo o máximo possível, mas ainda mantém a responsividade, por causa do max-width */
}

* {
    box-sizing: border-box; /* não irá somar bordas, padding, etc ao tamanho já definido do item */
}

/* Fim Reset */

/* Grid Geral */

.estrutura {
    display: grid; /* dizendo que irá usar a visualização do grid layout */
    grid-template-columns: minmax(160px, 1fr) 3fr 300px;/* dizendo que irá ter 3 colunas o site, uma para a sidenav, uma para content e outra para anúncio, a primeira coluna irá ter no mínimo 160px e no máximo 1fr (unidade de medida fracional que é de acordo com o espaço que têm no grid), 3fr o content terá 3 vezes mais o tamanho do que o um 1fr, os anúncios terão no máximo 300px */
    grid-template-areas: 
        "header header header"
        "sidenav conteudo anuncios"
        "footer footer footer"; /* criando as áreas principais do site, onde primeiro virá o cabeçalho depois a sidenav, depois conteudo e anuncio, por último o footer */
}

/* Fim Grid Geral */

/* Header */

.header {
    grid-area: header; /* definindo a area do header */

    background: linear-gradient(135deg, #8844ee, #B07DFB); /* criando um 
    gradiente entre as cores de 135 graus*/
    padding: 30px; /* preenchimento que será o mesmo tamanho que o gutter do site */
    display: grid; /* dizendo que irá utilizar o gridlayout */
    grid-template-columns: 1fr auto; /* dizendo que o logo irá ter o tamanho de 1fr e que o menu será automático o tamanho */
    align-items: center; /* alinhando ao centro os itens na vertical */
}

.logo {
    max-width: 200px; /* tamanho máximo do logo será 200px */
}

.header nav ul {
    display: flex; /* definindo que a lista será flexbox para que fique lado a lado */
    flex-wrap: wrap; /* quando não couber mais irá quebrar linha */
}

.header nav a {
    display: block; /* adicionando display block pois irá influenciar no tamanho do a, por isso é alterado de inline para block */
    padding: 10px; /* aumentando área de contato para o mobile */
    color: #fff;
    font-size: 1.5em;
    background: rgba(0, 0, 0, .1); /* criando um background que irá usar principalmente a cor de fundo, opacidade de 10% */
    transition: 0.1s; /* criando uma transição nos a para que quando passar o mouse ter mais fluidez na mudança */
    border-radius: 6px; /* criando as bordas arredondadas */
}

.header nav a:hover { /* quando passar o mouse por cima */
    background: rgba(0, 0, 0, .5); /* opacidade de 50% */
}

.header nav li + li { /* adjacente irá sempre pegar depois do primeiro li  */
    margin-left: 30px; /* adicionado margem que irá ser no segundo item li */
}

/* Fim Header */

/* Sidenav */

.sidenav {
    grid-area: sidenav;
    background-color: #FAFBFC;
    padding: 30px; /* preenchimento padrão no mesmo valor do gutter */
}

.sidenav li a {
    display: block; /* alterando para display block, para poder influenciar no tamanho */
    min-width: 60px;
    max-width: 100px;
    margin: 0 auto 30px auto;
    background-color: #fff;
    box-sizing: unset; /* tirando o box-sizing, pois se ficar com ele o paddingo irá somar no tamanho min ou max de width e não somar com esses valores */
    padding: 20px;

    border-radius: 6px;
    box-shadow: 5px 5px 15px 0px rgba(44, 44, 44, .15); /* primeiro distãncia da sombra na horizontal, segundo valor a distância na vertical, o terceiro é o blur o quanto borrada a sombra deve ser e o quarto é o tamanho da sombra, isso influencia na visualização dos outros itens */

    transition: 0.1s ease-out; /* será uma transição suave e rápida */
}

.sidenav li a:hover {
    background-color: #B07DFB;
}

/* Fim Sidenav */

/* Conteúdo */

.content {
    grid-area: conteudo;

    max-width: 900px; /* definindo max-width para que o texto não fique muito largo */
    margin: 0 auto; /* centralizando */
    padding: 30px; /* gap */
    display: grid; /* iniciando grid layout */
    grid-template-columns: 1fr 1fr; /* o grid irá usar duas colunas do mesmo tamanho */
    grid-gap: 30px; /* espaço entre os itens */
}

.ponta-ponta { /* conteúdos que irão pegar duas colunas */
    grid-column: 1 / -1; /* definindo que esse item irá pegar duas colunas, porém não é colocado 3, pois caso aumentar as colunas do site, continuara pegando todas as colunas */
}

.lobinho-1 {
    grid-row: span 2; /* esse item irá se expandir por duas linhas, também poderia colocar 3 / 5, porém caso aumentasse o número de linhas do site (conteúdo) iria quebrar e ter que alterar sempre */
    align-self: end; /* alinhando o item na vertical, align self sempre é usado no grid item */
}

.lobinho-2 {
    align-self: end; /* alinhando o item na vertical, align self sempre é usado no grid item */
}

/* Estilos Content */

p {
    font-size: 1.2em;
    line-height: 1.6em;
    letter-spacing: -0.005em; /* faz uma redução mínima entre o espaçamentos das letras */
    color: rgba(0, 0, 0, .7) /* preto puro, porém com 70% de opacidade para criar um tom de cinza */
}

.info p + p { /* pegando o segundo p */
    margin-top: 30px;
}

.titulo {
    color: #B07DFB;
}

.titulo h1 {
    font-size: 4em;
    line-height: 1em;
    font-weight: 700; /* colocando mesmo valor da fonte que está sendo usada do Google Fonts */
}

.titulo span {
    font-size: 1.2em;
    font-style: italic;
}

.detalhes {
    display: flex; /* usando flexbox para ficar lado a lado */
    align-items: flex-start; /* alinhando ao início na vertical */
}

.detalhes div {
    width: 80px;

    text-align: center;

    background: linear-gradient(135deg, #8844ee, #B07DFB); /* criando um 
    gradiente entre as cores de 135 graus*/
    border-radius: 6px; /* arredondando as bordas */
    box-shadow: 5px 5px 15px 0px rgba(44, 44, 44, .15); /* primeiro distãncia da sombra na horizontal, segundo valor a distância na vertical, o terceiro é o blur o quanto borrada a sombra deve ser e o quarto é o tamanho da sombra, isso influencia na visualização dos outros itens */

   
}

.detalhes span {
    display: block; /* alterando para quebrar linha */
    color: #B07DFB;
}

.detalhes > div:first-child { /* pegando a div que está dentro de detalhes e seu primeiro filho */
    margin-right: 30px; 
}

.detalhes .numero {
    font-size: 3em;
    color: #B07DFB;
    margin: 10px auto;
    line-height: 1em;
}

.detalhes .rotulo {
    /*color: #fff;*/
    font-size: 1.2em;
    font-style: italic;
    background-color: #fff;
    border-radius: 0 0 6px 6px; /* criando apenas nas partes de baixo */
    padding: 5px 0;

    position: relative; /* usando position relative para poder posicionar o item para cobrir a parte roxa que está ficando */
    top: 2px;
}

/* Fim Estilos Content */

/* Fim Conteúdo */

/* Anúncios */

.anuncios {
    grid-area: anuncios;
    background-color: #FAFBFC;
    display: grid; /* será utilizado o grid layout */
    align-content: start; /* alinhando o conteúdo ao início na vertical */
    padding: 30px; /* gap padrão para separar os itens que está sendo usado no site */
    grid-gap: 30px; /* adicionando gap de 30px para separar as imagens dos anúncios */
}

/* Fim Anúncios */

/* Footer */

.footer {
    grid-area: footer;
    background: linear-gradient(135deg, #8844ee, #B07DFB); /* criando um 
    gradiente entre as cores de 135 graus*/
}

.footer p {
    color: #fff;
    text-align: center;
    font-size: 1.125em;
    padding: 30px;
}

/* Fim Footer */